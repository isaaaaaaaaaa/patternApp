// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatternsAPI.DAL.Context;

#nullable disable

namespace PatternsAPI.Migrations
{
    [DbContext(typeof(PatternsContext))]
    partial class PatternsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PatternsAPI.Models.Pattern", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("PatternCompanyId")
                        .HasColumnType("int");

                    b.Property<int>("PatternTypeId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("PatternCompanyId");

                    b.HasIndex("PatternTypeId");

                    b.ToTable("Pattern", (string)null);
                });

            modelBuilder.Entity("PatternsAPI.Models.PatternCompany", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Pattern_Company", (string)null);
                });

            modelBuilder.Entity("PatternsAPI.Models.PatternType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id");

                    b.ToTable("Pattern_Type", (string)null);
                });

            modelBuilder.Entity("PatternsAPI.Models.ValueDomain", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ValueType")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id");

                    b.ToTable("Value_Domain", (string)null);
                });

            modelBuilder.Entity("PatternsAPI.Models.ValueDomainValue", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ValueDomainId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ValueDomainId");

                    b.ToTable("Value_Domain_Value", (string)null);
                });

            modelBuilder.Entity("PatternsAPI.Models.Pattern", b =>
                {
                    b.HasOne("PatternsAPI.Models.PatternCompany", "PatternCompany")
                        .WithMany()
                        .HasForeignKey("PatternCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatternsAPI.Models.PatternType", "PatternType")
                        .WithMany()
                        .HasForeignKey("PatternTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatternCompany");

                    b.Navigation("PatternType");
                });

            modelBuilder.Entity("PatternsAPI.Models.ValueDomainValue", b =>
                {
                    b.HasOne("PatternsAPI.Models.ValueDomain", "ValueDomain")
                        .WithMany()
                        .HasForeignKey("ValueDomainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ValueDomain");
                });
#pragma warning restore 612, 618
        }
    }
}
